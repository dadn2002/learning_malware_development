#include "../imports.h"

/* Information 
create .exe of .cpp using .obj data
    gcc name.cpp name2.obj -o name.exe  (-o is to rename, usual output is a.exe)
*/

void doSomethingElse(){
    //
}

int main(int argc, char* argv[]){
    /*  Here we check if something is using the program in debug mode */
    if (IsDebuggerPresent()){
        /*  Note that IsDebuggerPresent() reads the same value as (BOOL)NtCurrentPeb() 
           
        */
        printf("[!] debugged by something");

        /*  Placing other behavior can be useful for disguise purposes */
        /*  Like being placed in quarentine by some HD*/
        doSomethingElse();

        /*  You can check if another program is being debugged 
        //  BOOL Debugged = False; HANDLE Process = NULL;
        //  CheckRemoteDebuggerPresente(Process, &Debugged);
        //  if (Debugged) { printf("Process is being debugged"); }
        //  else { doSomethingElse(); } 
        */

        /*  There's a equivalence lowlevel function that does the same 
            __kernel_entry NTSTATUS NtQueryInformationProcess(
                HANDLE             ProcessHandle,
                PROCESSINFOCLASS   ProcessInformationClass,
                PVOID              ProcessInformation,
                ULONG              ProcessInformationLength,
                PULONG             ReturnLength
            )
        */
        return 0;
    }
    else {
        MessageBoxW(NULL, L"Hello", L"Whos There", MB_ICONEXCLAMATION);
    }
    return 0;
}