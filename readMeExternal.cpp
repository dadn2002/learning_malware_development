/*  gdb name.exe
        GDB will start, and you'll see a (gdb) prompt.
        Note that GDB is designed to debug programs without being noticed.
        You can now use various GDB commands to debug your program. Some commonly used commands include:
            run                    Start executing the program.
            break                  <line_number>: Set a breakpoint at a specific line number.
            continue               Continue execution after hitting a breakpoint.
            next                   Execute the next line of code.
            step                   Step into functions.
            print <variable_name>  Print the value of a variable.
            quit                   Exit GDB.
    WinDbg debugger tool
        A Windows Kit program interface for debugging.
        Note that WinDbg is designed to debug programs without being noticed.
        Here's a list of some common commands in WinDbg along with their descriptions:
            .sympath+ C:\Symbols         Sets the symbol search path for WinDbg.
            .reload /f                   Reloads symbol information for all modules.
            x module_name!function_name  Examines symbols or memory.
            bp module_name!function_name Sets a breakpoint.
            bl                           Lists breakpoints.
            g                            Executes the program until a breakpoint is encountered or it completes.
            lm                           Lists loaded modules.
            !sym noisy                   Enables noisy symbol loading diagnostics.
            !analyze -v                  Performs automatic analysis of the crash dump.
            r                            Displays or modifies the contents of registers.
            kv                           Displays the call stack with the values of the arguments to each function.
            lmvm module_name             Displays detailed information about a loaded module.
*/